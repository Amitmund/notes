# About Perl Notes

using perl as a grep:

cat some_file | perl -ne 'print if /abc(foo|bar)-something_else/'
[OR]
perl -ne 'print if /abc(foo|bar)-something_else/' some_file

grep foo: perl -ne 'print if /foo/'

replaces foo with bar: perl -pe 's/foo/bar/'

# Find line having FOO and print only the first set-of-words saparated by white-space
perl -ne 'print "$1\n" if /(\d\S+).*(FOO)/'
perl -ne 'print "$1 $2\n" if /(\d\S+).*HOSTNAME=(\S+).*(SSL)/'

URL: https://blogs.oracle.com/ksplice/entry/the_top_10_tricks_of

$, also known as output field separator, and $" also known as list separator [ in perl ]
$, = '--';
say 'A', 'B', 'C';  # A--B--C
say @names;         # Foo--Bar--Que

################ regex #################


/hello/ -> work hello should be there in the string

/^hello/ -> ^ mean, the match string should be in start
/hello$/ -> $ mean, the match string should be at the end

/hel+o/ -> + mean, once or more [ "helo", "hello", "helllllllo"] -> with one "l", or 2 "l" or multple "l"
/hel*o/ -> * mean, zero or more time. Almost same as above, with true for "heo" too. ]  -> [ "heo", "helo", "hello", "hellllllo" ]
/hel?o/ -> ? mean, zero or with only one. [ "heo" or "helo" only. ]. This will not match [ hello, hellllllo ]

/hello|goodbye/ -> either|or
/he..o/ -> . mean any character . [ hello, heazo ]
/\wello/ -> \w mean alphanmeric or _ (underscore)
/\bhello/ -> \b mean word boundary => space tab.

[...] Match any one character of a class
[^...] Match any one character not in the bracket
. Match any character (except newline [^\n]) in non

single-line mode (/s)
\d Any digit. Equivalent to [0..9] or [[:digit:]]
\D Any non-digit.
\s Any whitespace. [ \t\s\n\r\f\v] or [[:space:]]
\S Any non-whitespace.
\w Any word character. [a-zA-Z0-9_] or [[:alnum:_]]

######################################################

